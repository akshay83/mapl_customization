[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Bank Detail", 
  "modified": "2017-05-15 17:42:17.095180", 
  "name": "Bank Detail-Client", 
  "script": "frappe.ui.form.on(\"Bank Detail\", \"refresh\", function(frm) {\n\tfrm.page.add_menu_item(__('Send SMS'), function() { \n\t\t\tBankSMSManager(frm.doc);\n\t});\n});\n\nfunction BankSMSManager(doc) {\n\tvar me = this;\n\tthis.setup = function() {\n    \tvar default_msg = \"Bank Name:\"+doc.bank_name+\"\\n\"+\n        \t\t\t\t\"Acc Name:\"+doc.account_holder_name+\"\\n\"+\n                        \"Acc No:\"+doc.account_number+\"\\n\"+\n                        \"IFSC:\"+doc.ifsc_code+\"\\n\"+\n                        \"Branch:\"+doc.branch;\n\t\tthis.show(default_msg);\n\t};\n\n\tthis.show = function(message) {\n\t\tthis.message = message;\n\t\tme.show_dialog();\n\t}\n\tthis.show_dialog = function() {\n\t\tif(!me.dialog)\n\t\t\tme.make_dialog();\n\t\tme.dialog.set_values({\n\t\t\t'message': me.message\n\t\t})\n\t\tme.dialog.show();\n\t}\n\tthis.make_dialog = function() {\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: 'Send SMS',\n\t\t\twidth: 400,\n\t\t\tfields: [\n\t\t\t\t{fieldname:'number', fieldtype:'Data', label:'Mobile Number', reqd:1},\n\t\t\t\t{fieldname:'message', fieldtype:'Text', label:'Message', reqd:1},\n\t\t\t\t{fieldname:'send', fieldtype:'Button', label:'Send'}\n\t\t\t]\n\t\t})\n\t\td.fields_dict.send.input.onclick = function() {\n\t\t\tvar btn = d.fields_dict.send.input;\n\t\t\tvar v = me.dialog.get_values();\n\t\t\tif(v) {\n\t\t\t\t$(btn).set_working();\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"erpnext.setup.doctype.sms_settings.sms_settings.send_sms\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\treceiver_list: [v.number],\n\t\t\t\t\t\tmsg: v.message\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t$(btn).done_working();\n\t\t\t\t\t\tif(r.exc) {msgprint(r.exc); return; }\n\t\t\t\t\t\tme.dialog.hide();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.dialog = d;\n\t}\n\tthis.setup();\n}", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Installation Note", 
  "modified": "2016-07-07 20:20:55.126289", 
  "name": "Installation Note-Client", 
  "script": "frappe.ui.form.on(\"Installation Note\", \"onload\", function(frm) {\n   frm.set_query(\"customer\", function(doc) {\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_customer_query\"\n\t}\n   });\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Receipt", 
  "modified": "2017-08-04 19:32:10.026751", 
  "name": "Purchase Receipt-Client", 
  "script": "frappe.ui.form.on(\"Purchase Receipt\", \"onload\", function(frm) {\n\tif (frm.doc.__islocal) {\n\tfrappe.db.get_value(\"User\",frappe.boot.user.name,\"user_group\", function(r) \n\t\t{ \n\t\t\tif (r.user_group) { \n\t\t\t\tvar grp = r.user_group;\n\t\t\t\tif (grp == \"Geeta Bhawan\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/GB/PREC/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Vijay Nagar\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/VN/PREC/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Ranjeet Hanuman\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/RH/PREC/.YYYY./.######');\n\t\t\t\t}\n\t\t\t} \n\t\t});\n\t}\n});\n\ncur_frm.add_fetch('item_code', 'is_vehicle', 'is_vehicle');\n/***************************************************************/\n/*              Invoke Dialog On Child Form                    */\n/***************************************************************/\n\nfrappe.ui.form.on(\"Purchase Receipt\", \"items_on_form_rendered\", function(frm) {\n    // Important Note : Sub Form Fieldname+\"_on_form_rendered\" would trigger and add\n    // The button in child form\n    var grid_row = cur_frm.open_grid_row();\n\n\t//Set rejected_warehouse as Null, overcome problem of Default Warehouse\n\tgrid_row.grid_form.fields_dict.rejected_warehouse.set_model_value(null);\n\n    // Add Button to Child Form ... Wrap it around the \"dialog_result\" field\n    var $btn = $('<button class=\"btn btn-sm btn-default\">' + __(\"Add Serial No\") + '</button>')\n        .appendTo($(\"<div>\")\n            .css({\n                \"margin-bottom\": \"10px\",\n                \"margin-top\": \"10px\"\n            })\n            .appendTo(grid_row.grid_form.fields_dict.serial_no.$wrapper));\n\n    // Bind a Event to Added Button\n    $btn.on(\"click\", function() {\n        var fields = [];\n        for (var rows = 1; rows <= grid_row.grid_form.fields_dict.received_qty.get_value(); rows++) {\n            fields.push({\n                label: \"Row No:\".concat(rows),\n                fieldname: \"row_no_\".concat(rows),\n                fieldtype: \"Section Break\"\n            });\n            for (var columns = 1; columns <= 4; columns++) {\n                if (columns == 1) {\n                    fields.push({\n                        label: \"Serial/Chassis No\",\n                        fieldname: \"chassis_no_\".concat(rows),\n                        fieldtype: \"Data\",\n                        reqd: 1\n                    });\n                }\n                if (grid_row.grid_form.fields_dict['is_vehicle'].value == 1) {\n                    if (columns == 2) {\n                        fields.push({\n                            label: \"Engine No\",\n                            fieldname: \"engine_no_\".concat(rows),\n                            fieldtype: \"Data\",\n                            reqd: 1\n                        });\n                    }\n                    if (columns == 3) {\n                        fields.push({\n                            label: \"Key No\",\n                            fieldname: \"key_no_\".concat(rows),\n                            fieldtype: \"Data\",\n                            reqd: 1\n                        });\n                    }\n                    if (columns == 4) {\n                        fields.push({\n                            label: \"Color\",\n                            fieldname: \"color_\".concat(rows),\n                            fieldtype: \"Data\",\n                            reqd: 1\n                        });\n                    }                    \n                    if (columns < 4) {\n                        fields.push({\n                            fieldname: \"column_no_\".concat(columns),\n                            fieldtype: \"Column Break\"\n                        });\n                    }\n                }\n            }\n        }\n        // Add \"Add\" Button to the Dialog\n        fields.push({\n            fieldtype: \"Section Break\"\n        });\n        //fields.push({fieldtype: \"Button\", \"label\": \"Set\", fieldname: \"add\"});\n\n\n        var d = new frappe.ui.Dialog({\n            title: __(\"Add Serial No\"),\n            fields\n        });\n\n        if (grid_row.grid_form.fields_dict.serial_no.get_value() != \"\") {\n            var existing_serial_no = grid_row.grid_form.fields_dict.serial_no.get_value().split(\"\\n\");\n            var existing_engine_no = grid_row.grid_form.fields_dict.serial_no.get_value().split(\"\\n\");\n            var existing_key_no = grid_row.grid_form.fields_dict.serial_no.get_value().split(\"\\n\");\n            var existing_color = grid_row.grid_form.fields_dict.color.get_value().split(\"\\n\");\n            for (var row = 1; row <= existing_serial_no.length + 1; row++) {\n                d.set_value(\"chassis_no_\".concat(row), existing_serial_no[row - 1]);\n                d.set_value(\"engine_no_\".concat(row), existing_engine_no[row - 1]);\n                d.set_value(\"key_no_\".concat(row), existing_key_no[row - 1]);\n                d.set_value(\"color_\".concat(row), existing_color[row - 1]);\n            }\n        }\n        //Bind Event to Add Button in Dialog\n        d.set_primary_action(__(\"Save\"), function() {\n            /*****************/\n            args = d.get_values();\n            if (!args) return;\n            frappe.call({\n                method: \"mapl_customization.customizations_for_mapl.utils.validate_input_serial\",\n                args: {\n                    \"args\": d.get_values(),\n                    \"rows\": grid_row.grid_form.fields_dict.received_qty.get_value(),\n                    \"is_vehicle\": grid_row.grid_form.fields_dict['is_vehicle'].value\n                },\n\n                callback: function(r) {\n                    if (!r.message) {\n                        //return;\n                    }\n                }\n            });\n\n            /*****************/\n\n            //d.get_input(\"add\").on(\"click\", function() {\n            var result_serial_no = \"\";\n            var result_engine_no = \"\";\n            var result_key_no = \"\";\n            var result_color = \"\";\n            for (var rows = 1; rows <= grid_row.grid_form.fields_dict.received_qty.get_value(); rows++) {\n                result_serial_no = result_serial_no.concat(d.get_value(\"chassis_no_\".concat(rows)), \"\\n\");\n                result_engine_no = result_engine_no.concat(d.get_value(\"engine_no_\".concat(rows)), \"\\n\");\n                result_key_no = result_key_no.concat(d.get_value(\"key_no_\".concat(rows)), \"\\n\");\n                result_color = result_color.concat(d.get_value(\"color_\".concat(rows)), \"\\n\");\n            }\n            d.hide();\n                //Set Resultant Value from Dialog in a Child Form Field - Here dialog_result\n                grid_row.grid_form.fields_dict.serial_no.set_value(result_serial_no);\n                //Set Resultant Value from Dialog in a Child Form Field - Here dialog_result\n                grid_row.grid_form.fields_dict.engine_nos.set_value(result_engine_no);\n                //Set Resultant Value from Dialog in a Child Form Field - Here dialog_result\n                grid_row.grid_form.fields_dict.key_nos.set_value(result_key_no);\n                grid_row.grid_form.fields_dict.color.set_value(result_color);\n\n            return false;\n        });\n\n        d.show();\n    });\n});\n/***************************************************************/\n/*              End Dialog On Child Form                       */\n/***************************************************************/", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Customer", 
  "modified": "2017-05-31 18:38:55.250555", 
  "name": "Customer-Client", 
  "script": "frappe.ui.form.on(\"Customer\",\"refresh\", function(frm) {\n\t\tif (frm.doc.__islocal) {\n\t\t\tfrm.add_custom_button(__('Quick Entry'), function() {\n\t\t\t\tcustom.customer_quick_entry(frm);\n\t\t\t});\n\t\t\tcustom.customer_quick_entry(frm);\n\t\t}\n\n                   custom._get_party_balance_in_drcr('Customer', frm.doc.name,\n\t\t\t\t\t\t\tfrappe.defaults.get_user_default(\"company\"), function(result) { \n\t\t\t\t\t\t\t\tfrm.doc.current_balance=result; \nrefresh_field(\"current_balance\");\n                             });\n});\n\nfrappe.ui.form.on(\"Customer\",\"refresh\", function(frm) {\n\t\tif (!frm.doc.__islocal && !cur_frm.is_dirty()) {\n\t\t\tfrm.add_custom_button(__('Update Customer Name'), function() {\n\t\t\tif (cur_frm.is_dirty()) {\n\t\t\t\tfrappe.msgprint(__(\"Please Save Changes Before Updating\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t            frappe.call({\n\t\t                method: \"mapl_customization.customizations_for_mapl.update_customer_name.update_customer_name\",\n\t\t                args: {\n\t\t                    \"customer\": frm.doc.name,\n\t\t\t\t    \"customer_name\": frm.doc.customer_name\n\t\t                },\n\n                \t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tfrappe.msgprint(__(\"Customer Name Updated Across All Relevant Documents\"));\n\t\t\t\t\t}\t\t       \n\t\t\t\t}\n\t\t            });\n\t\t\t});\n\t\t}\n});\n\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Invoice", 
  "modified": "2017-08-05 19:57:09.867722", 
  "name": "Sales Invoice-Client", 
  "script": "frappe.ui.form.on(\"Sales Invoice\", \"is_pos\", function(frm) {\n\tconsole.log('is pos');\n\tif (frm.doc.is_pos==1) {\n\t\tsetTimeout(function() {\n\t\t\tcur_frm.clear_table('payments');\n\t\t\tcur_frm.refresh_field('payments');\n\t\t}, 2000 );\n\t}\n});\nfrappe.ui.form.on(\"Sales Invoice\", \"before_cancel\", function(frm) {\n\tvar dialog = new frappe.ui.Dialog({\n\t\ttitle: \"Cancel Invoice\",\n\t\tfields: [\n\t\t\t{\"fieldtype\": \"Text\", \"label\": __(\"Reason for Cancelling\"), \"fieldname\": \"reason\",\n\t\t\t\t\"reqd\": 1 },\n\t\t\t{\"fieldtype\": \"Button\", \"label\": __(\"Update\"), \"fieldname\": \"update\"},\n\t\t]\n\t});\n\n\tdialog.fields_dict.update.$input.click(function() {\n\t\targs = dialog.get_values();\n\t\tif(!args) return;\n\t\treturn cur_frm.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.cancel_reason.update_reason\",\n\t\t\targs: {\n\t\t\t \"doc\":cur_frm.doc,\n\t\t\t \"reason\":args.reason\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tmsgprint(__(\"There were errors.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t\tcur_frm.reload_doc();\n\t\t\t},\n\t\t\tbtn: this\n\t\t})\n\t});\n\tdialog.show();\n});\n\n//ADD MENU ITEM IN MENU DROPDOWN BUTTON\nfrappe.ui.form.on(\"Sales Invoice\", \"refresh\", function(frm) {\n   if (frm.doc.docstatus == 0 && $('.grey-link:contains(Cancel)').length <= 0) { \n\tfrm.page.add_menu_item(__('Cancel'), function() { frm.savecancel() });\n   }\n   if (!frm.doc.__islocal && !cur_frm.is_dirty() && frm.doc.docstatus==2) {\n\t\t\tfrm.page.add_menu_item(__('Make Document Editable'), function() { \n\t\t\t\tif (cur_frm.is_dirty()) {\n\t\t\t\t\tfrappe.msgprint(__(\"Please Save Changes Before Updating\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t            frappe.call({\n\t\t                method: \"mapl_customization.customizations_for_mapl.utils.make_document_editable\",\n\t\t                args: {\n\t\t                    \"doctype\": frm.doc.doctype,\n\t\t\t\t\t\t    \"doc_name\": frm.doc.name\n\t\t                },\n                \t\tcallback: function(r) {\n\t\t\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\t\t\tfrappe.msgprint(__(\"Success\"));\n                                frm.reload_doc();\n\t\t\t\t\t\t\t}\t\t       \n\t\t\t\t\t\t}\n\t            });\n\t\t\t});   \n   }\n\t$('.frappe-control.input-max-width[data-fieldname=\"grand_total\"]').find('.control-value.like-disabled-input.bold').css('background','lightblue')\n});\n\n//TO HIDE PRINT ICON & PRINT MENU FROM A DOCUMENT IN VERSION 6 USE\nfrappe.ui.form.on(\"Sales Invoice\",\"refresh\",function(frm) {\n    /*if (frm.doc.docstatus != 1) {\n        $('ul[class=\"dropdown-menu\"] a:contains(\"Print\")').hide(); //HIDE MENU ENTRY - FIND BASED ON TEXT AND <A> //\n        $(\".page-icon-group.hidden-xs.hidden-sm\").hide(); //HIDE PRINT ICON - FIND BASED ON ID //\n    } else {\n        $('ul[class=\"dropdown-menu\"] a:contains(\"Print\")').show(); //HIDE MENU ENTRY - FIND BASED ON TEXT AND <A> //\n        $(\".page-icon-group.hidden-xs.hidden-sm\").show(); //HIDE PRINT ICON - FIND BASED ON ID //    \n    }*/\n    //TO FILL VOLATILE TYPE FIELD \n    //if (frm.doc.customer!=null) {\n    //    frappe.model.get_value(\"Customer\",frm.doc.customer,\"tax_id\", function(value) {;\n    //         frm.set_value(\"test_vat\",value.tax_id);\n    //    });\n    //}\n});\n\ncur_frm.add_fetch('item_code','is_vehicle','is_vehicle');\ncur_frm.add_fetch('customer','tax_id','test_vat');\n\ncur_frm.cscript.onload = function() {\n   cur_frm.set_query(\"customer\", function(doc) {\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_customer_query\"\n\t}\n   });\n   cur_frm.set_query(\"shipping_address_name\", function(doc) {\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_address_query\",\n                filters: {'customer':doc.customer}\n\t}\n   });\n$('.frappe-control.input-max-width[data-fieldname=\"grand_total\"]').find('.control-value.like-disabled-input.bold').css('background','lightblue')\n\n};\nfrappe.ui.form.on(\"Sales Invoice\", \"onload\", function(frm) {\n\tif (frm.doc.__islocal) {\n\tfrappe.db.get_value(\"User\",frappe.boot.user.name,\"user_group\", function(r) \n\t\t{ \n\t\t\tif (r.user_group) { \n\t\t\t\tvar grp = r.user_group;\n\t\t\t\tif (grp == \"Geeta Bhawan\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/GB/INV/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Vijay Nagar\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/VN/INV/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Ranjeet Hanuman\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/RH/INV/.YYYY./.######');\n\t\t\t\t}\n\t\t\t} \n\t\t});\n\t}\n});\nfrappe.ui.form.on(\"Sales Invoice\", \"shipping_address_name\", function(frm) {\n    if (!frm.doc.shipping_address_name) {\n       frm.set_value(\"shipping_address\",null);\n    }\n});\nfrappe.ui.form.on(\"Sales Invoice\", \"is_finance\", function (frm) {\n         cur_frm.set_df_property(\"hypothecation\", \"reqd\", frm.doc.is_finance==1);\n         cur_frm.refresh_field(\"hypothecation\");\n});\nfrappe.ui.form.on(\"Sales Invoice\", \"delayed_payment\", function (frm) {\n         cur_frm.set_df_property(\"referred_by\", \"reqd\", frm.doc.delayed_payment==1);\n         cur_frm.refresh_field(\"referred_by\");\n});\nfrappe.ui.form.on(\"Sales Invoice\", \"customer\", function (frm) {\n        cur_frm.set_df_property(\"customer_name\", \"hidden\", false);\n             if (frm.doc.customer) {\n                   custom._get_party_balance_formatted('Customer', frm.doc.customer,\n\t\t\t\t\t\t\tfrm.doc.company, function(result) { \n\t\t\t\t\t\t\t\tshow_alert(result,8); \n                             });\n             }\n});\n\nfrappe.ui.form.on(\"Sales Invoice\", \"items_on_form_rendered\", function(frm) {\t\n    // Important Note : Sub Form Fieldname+\"_on_form_rendered\" would trigger and add\n    // The button in child form\n    var grid_row = cur_frm.open_grid_row();\n\n\t//Set target_warehouse as Null, overcome problem of Default Warehouse\n\tgrid_row.grid_form.fields_dict.target_warehouse.set_model_value(null);\n\n    // Add Button to Child Form ... Wrap it around the \"dialog_result\" field\n    var $btn = $('<button class=\"btn btn-sm btn-default\">' + __(\"Current Stock\") + '</button>')\n        .appendTo($(\"<div>\")\n            .css({\n                \"margin-bottom\": \"10px\",\n                \"margin-top\": \"10px\"\n            })\n            .appendTo(grid_row.grid_form.fields_dict.item_code.$wrapper));\n\n    // Bind a Event to Added Button\n    $btn.on(\"click\", function() {\n\tif (grid_row.grid_form.fields_dict.item_code.value) {\n            frappe.call({\n                method: \"mapl_customization.customizations_for_mapl.utils.get_effective_stock_at_all_warehouse\",\n                args: {\n                    \"item_code\": grid_row.grid_form.fields_dict.item_code.value,\n                    \"date\": cur_frm.doc.posting_date\n                },\n\n                callback: function(r) {\n                    if (r.message) {\n                        custom.show_stock_dialog(r.message);\n                    }\n                }\n            });\t\n\t}\n    });\n});\n\nfrappe.ui.form.on(\"Sales Invoice\", \"validate\", function(frm) {\n\tif (frm.doc.default_warehouse != null) {\n\t\tfrm.doc.items.forEach(function(i) {\n\t\t\tif (i.warehouse == null) {\n\t\t\t\ti.warehouse = frm.doc.default_warehouse;\n\t\t\t}\n\t\t});\n\t}\n\t/*frm.doc.items.forEach(function(i) {\n            if (i.gst_hsn_code == null || i.gst_hsn_code == \"\") {\n            \tfrappe.msgprint(\"HSN Code Not found for \"+i.item_code+\", Please verify\");\n            }\n\t});*/\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Stock Problem", 
  "modified": "2017-07-21 14:25:01.850879", 
  "name": "Stock Problem-Client", 
  "script": "frappe.ui.form.on(\"Stock Problem\", \"refresh\", function (frm) {\n   cur_frm.toggle_enable(\"status\",frm.doc.status===\"Open\")\n});\nfrappe.ui.form.on(\"Stock Problem\", \"status\", function (frm) {\n         cur_frm.set_df_property(\"resolution\", \"reqd\", frm.doc.status==\"Closed\");\n});\n\nfrappe.ui.form.on(\"Stock Problem\", \"onload\", function(frm) {\n   cur_frm.set_query(\"customer\", function(doc) {\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_customer_query\"\n\t}\n   });\n});\nfrappe.ui.form.on(\"Stock Problem\", \"is_customer_return\", function (frm) {\n         cur_frm.set_df_property(\"customer\", \"reqd\", frm.doc.is_customer_return==1);\n         cur_frm.set_df_property(\"returned_on\", \"reqd\", frm.doc.is_customer_return==1);\n         cur_frm.refresh_field(\"hypothecation\");\n});\n\ncur_frm.fields_dict['serial_no'].get_query = function(doc, cdt, cdn) {\n\tvar cond = [];\n\tvar filter = [\n\t\t['Serial No', 'docstatus', '!=', 2]\n\t];\n\tif(doc.item) {\n\t\tcond = ['Serial No', 'item_code', '=', doc.item];\n\t\tfilter.push(cond);\n\t}\n\treturn{\n\t\tfilters:filter\n\t}\n}", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Delivery Note", 
  "modified": "2017-08-04 19:32:55.439900", 
  "name": "Delivery Note-Client", 
  "script": "frappe.ui.form.on(\"Delivery Note\", \"before_cancel\", function(frm) {\n\tvar dialog = new frappe.ui.Dialog({\n\t\ttitle: \"Cancel Delivery Note\",\n\t\tfields: [\n\t\t\t{\"fieldtype\": \"Text\", \"label\": __(\"Reason for Cancelling\"), \"fieldname\": \"reason\",\n\t\t\t\t\"reqd\": 1 },\n\t\t\t{\"fieldtype\": \"Button\", \"label\": __(\"Update\"), \"fieldname\": \"update\"},\n\t\t]\n\t});\n\n\tdialog.fields_dict.update.$input.click(function() {\n\t\targs = dialog.get_values();\n\t\tif(!args) return;\n\t\treturn cur_frm.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.cancel_reason.update_reason\",\n\t\t\targs: {\n\t\t\t \"doc\":cur_frm.doc,\n\t\t\t \"reason\":args.reason\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tmsgprint(__(\"There were errors.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t\tcur_frm.reload_doc();\n\t\t\t},\n\t\t\tbtn: this\n\t\t})\n\t});\n\tdialog.show();\n});\n\n\ncur_frm.add_fetch('item_code','is_vehicle','is_vehicle');\nfrappe.ui.form.on(\"Delivery Note\", \"shipping_address_name\", function(frm) {\n    if (!frm.doc.shipping_address_name) {\n       frm.set_value(\"shipping_address\",null);\n    }\n});\ncur_frm.cscript.onload = function() {\n   cur_frm.set_query(\"customer\", function(doc) {\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_customer_query\"\n\t}\n   });\n   cur_frm.set_query(\"shipping_address_name\", function(doc) {\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_address_query\",\n                filters: {'customer':doc.customer}\n\t}\n   });\n};\nfrappe.ui.form.on(\"Delivery Note\", \"onload\", function(frm) {\n\tif (frm.doc.__islocal) {\n\tfrappe.db.get_value(\"User\",frappe.boot.user.name,\"user_group\", function(r) \n\t\t{ \n\t\t\tif (r.user_group) { \n\t\t\t\tvar grp = r.user_group;\n\t\t\t\tif (grp == \"Geeta Bhawan\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/GB/DN/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Vijay Nagar\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/VN/DN/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Ranjeet Hanuman\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/RH/DN/.YYYY./.######');\n\t\t\t\t}\n\t\t\t} \n\t\t});\n\t}\n\n});\n\nfrappe.ui.form.on(\"Delivery Note\", \"items_on_form_rendered\", function(frm) {\t\n    // Important Note : Sub Form Fieldname+\"_on_form_rendered\" would trigger and add\n    // The button in child form\n    var grid_row = cur_frm.open_grid_row();\n\n\t//Set target_warehouse as Null, overcome problem of Default Warehouse\n\tgrid_row.grid_form.fields_dict.target_warehouse.set_model_value(null);\n});\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Order", 
  "modified": "2017-08-04 19:27:30.950175", 
  "name": "Sales Order-Client", 
  "script": "cur_frm.add_fetch('item_code','is_vehicle','is_vehicle');\nfrappe.ui.form.on(\"Sales Order\", \"is_finance\", function (frm) {\n         cur_frm.set_df_property(\"hypothecation\", \"reqd\", frm.doc.is_finance==1);\n         cur_frm.refresh_field(\"hypothecation\");\n});\nfrappe.ui.form.on(\"Sales Order\", \"customer\", function (frm) {\n        cur_frm.set_df_property(\"customer_name\", \"hidden\", false);\n             if (frm.doc.customer) {\n\t\tfrappe.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.utils.get_party_balance\",\n\t\t\targs: {\n\t\t\t\tparty: frm.doc.customer,\n\t\t\t\tcompany: frm.doc.company,\n                                party_type: \"Customer\"\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc && r.message) {\n                                    var alert_msg = frm.doc.customer+\" Current Balance:\";\n                                    if (parseFloat(r.message) > 0) {\n                                          alert_msg = alert_msg+\"<b><span style=\\\"color:red;\\\">\"+parseFloat(r.message)+\" Dr.</span></b>\";\n                                    } else if (parseFloat(r.message) < 0) {\n                                          alert_msg = alert_msg+\"<b><span style=\\\"color:blue;\\\">\"+parseFloat(r.message)+\" Cr.</span></b>\";\n                                    } else {\n                                          alert_msg = alert_msg+\"<b><span style=\\\"color:black;\\\"> 0.00</span></b>\";\n                                    }\n\t\t\t\t\t  \t\t\t\t\t  show_alert(alert_msg, 8);\n\t\t\t\t} else {\n                                          show_alert(frm.doc.customer+\" Current Balance:<b><span style=\\\"color:black;\\\"> 0.00</span></b>\",8);\n                                    }\n\t\t\t}\n\t\t});          \n            }\n});\ncur_frm.cscript.onload = function() {\n   cur_frm.set_query(\"customer\", function(doc) {\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_customer_query\"\n\t}\n   });\n   cur_frm.set_query(\"shipping_address_name\", function(doc) {\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_address_query\",\n                filters: {'customer':doc.customer}\n\t}\n   });\n};\nfrappe.ui.form.on(\"Sales Order\", \"items_on_form_rendered\", function(frm) {\n    // Important Note : Sub Form Fieldname+\"_on_form_rendered\" would trigger and add\n    // The button in child form\n    var grid_row = cur_frm.open_grid_row();\n\n    // Add Button to Child Form ... Wrap it around the \"dialog_result\" field\n    var $btn = $('<button class=\"btn btn-sm btn-default\">' + __(\"Current Stock\") + '</button>')\n        .appendTo($(\"<div>\")\n            .css({\n                \"margin-bottom\": \"10px\",\n                \"margin-top\": \"10px\"\n            })\n            .appendTo(grid_row.grid_form.fields_dict.item_code.$wrapper));\n\n    // Bind a Event to Added Button\n    $btn.on(\"click\", function() {\n\tif (grid_row.grid_form.fields_dict.item_code.value) {\n            frappe.call({\n                method: \"mapl_customization.customizations_for_mapl.utils.get_effective_stock_at_all_warehouse\",\n                args: {\n                    \"item_code\": grid_row.grid_form.fields_dict.item_code.value,\n                    \"date\": cur_frm.doc.transaction_date\n                },\n\n                callback: function(r) {\n                    if (r.message) {\n                        custom.show_stock_dialog(r.message);\n                    }\n                }\n            });\t\n\t}\n    });\n});\n\nfrappe.ui.form.on('Sales Order', 'customer' , function(frm) {\n\t\tif(frm.doc.customer) {\n\t\t\tfrm.set_party_account_based_on_party = true;\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: \"erpnext.accounts.doctype.payment_entry.payment_entry.get_party_details\",\n\t\t\t\targs: {\n\t\t\t\t\tcompany: frm.doc.company,\n\t\t\t\t\tparty_type: 'Customer',\n\t\t\t\t\tparty: frm.doc.customer,\n\t\t\t\t\tdate: frm.doc.transaction_date\n\t\t\t\t},\n\t\t\t\tcallback: function(r, rt) {\n\t\t\t\t\tif(r.message) {\n\t\t\t\t\t\t\tfrm.set_value(\"customer_account\", r.message.party_account);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\nfrappe.ui.form.on('Sales Order Payment', 'mode_of_payment', function(frm, cdt, cdn) {\n\t\tvar d = locals[cdt][cdn];\n\t\tfrappe.call({\n\t\tmethod: \"erpnext.accounts.doctype.sales_invoice.sales_invoice.get_bank_cash_account\",\n\t\targs: {\n\t\t\t\"mode_of_payment\": d.mode_of_payment,\n\t\t\t\"company\": frm.doc.company\n\t\t},\n\t\tcallback: function(r, rt) {\n\t\t\tif(r.message) {\n\t\t\t\tfrappe.model.set_value(cdt, cdn, 'account', r.message.account);\n\t\t\t}\n\t\t}\n\t\t});\n});\n\nfrappe.ui.form.on(\"Sales Order\", \"onload\", function(frm) {\n\tif (frm.doc.__islocal) {\n\tfrappe.db.get_value(\"User\",frappe.boot.user.name,\"user_group\", function(r) \n\t\t{ \n\t\t\tif (r.user_group) { \n\t\t\t\tvar grp = r.user_group;\n\t\t\t\tif (grp == \"Geeta Bhawan\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/GB/SO/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Vijay Nagar\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/VN/SO/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Ranjeet Hanuman\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/RH/SO/.YYYY./.######');\n\t\t\t\t}\n\t\t\t} \n\t\t});\n\t}\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Schemes", 
  "modified": "2016-02-22 13:43:36.921205", 
  "name": "Schemes-Client", 
  "script": "frappe.ui.form.on(\"Schemes\", \"status\", function (frm) {\n         cur_frm.set_df_property(\"closed_on\", \"reqd\", frm.doc.status==\"Settled\");\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Item", 
  "modified": "2017-04-04 14:15:53.482211", 
  "name": "Item-Client", 
  "script": "frappe.ui.form.on(\"Item\",\"refresh\", function(frm) {\n\t$(\"div.frappe-control[data-fieldname='description']\").find('.note-editing-area').css('height','100px');\n});\n\nfrappe.ui.form.on(\"Item\",\"onload\", function(frm) {\n             if (frm.doc.__islocal) {\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: \"erpnext.controllers.accounts_controller.get_default_taxes_and_charges\",\n\t\t\t\targs: {\n\t\t\t\t\t\"master_doctype\": \"Item Taxes Template\"\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tme.frm.set_value(\"taxes\", r.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n            }\n\t});\nfrappe.ui.form.on(\"Item\",\"taxes_template\", function(frm) {\n\t\tif(frm.doc.taxes_template) {\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: \"erpnext.controllers.accounts_controller.get_taxes_and_charges\",\n\t\t\t\targs: {\n\t\t\t\t\t\"master_doctype\": \"Item Taxes Template\",\n                                        \"master_name\": frm.doc.taxes_template\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tme.frm.set_value(\"taxes\", r.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Invoice", 
  "modified": "2017-08-05 19:56:34.715881", 
  "name": "Purchase Invoice-Client", 
  "script": "frappe.ui.form.on(\"Purchase Invoice\", \"before_cancel\", function(frm) {\n\tvar dialog = new frappe.ui.Dialog({\n\t\ttitle: \"Cancel Invoice\",\n\t\tfields: [\n\t\t\t{\"fieldtype\": \"Text\", \"label\": __(\"Reason for Cancelling\"), \"fieldname\": \"reason\",\n\t\t\t\t\"reqd\": 1 },\n\t\t\t{\"fieldtype\": \"Button\", \"label\": __(\"Update\"), \"fieldname\": \"update\"},\n\t\t]\n\t});\n\n\tdialog.fields_dict.update.$input.click(function() {\n\t\targs = dialog.get_values();\n\t\tif(!args) return;\n\t\treturn cur_frm.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.cancel_reason.update_reason\",\n\t\t\targs: {\n\t\t\t \"doc\":cur_frm.doc,\n\t\t\t \"reason\":args.reason\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tmsgprint(__(\"There were errors.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t\tcur_frm.reload_doc();\n\t\t\t},\n\t\t\tbtn: this\n\t\t})\n\t});\n\tdialog.show();\n});\nfrappe.ui.form.on(\"Purchase Invoice\", \"onload\", function(frm) {\n\tif (frm.doc.__islocal) {\n\tfrappe.db.get_value(\"User\",frappe.boot.user.name,\"user_group\", function(r) \n\t\t{ \n\t\t\tif (r.user_group) { \n\t\t\t\tvar grp = r.user_group;\n\t\t\t\tif (grp == \"Geeta Bhawan\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/GB/PINV/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Vijay Nagar\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/VN/PINV/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Ranjeet Hanuman\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/RH/PINV/.YYYY./.######');\n\t\t\t\t}\n\t\t\t} \n\t\t});\n\t}\n});\n\ncur_frm.add_fetch('item_code', 'is_vehicle', 'is_vehicle');\n/***************************************************************/\n/*              Invoke Dialog On Child Form                    */\n/***************************************************************/\n\nfrappe.ui.form.on(\"Purchase Invoice\", \"items_on_form_rendered\", function(frm) {\n    // Important Note : Sub Form Fieldname+\"_on_form_rendered\" would trigger and add\n    // The button in child form\n    var grid_row = cur_frm.open_grid_row();\n\n\t//Set rejected_warehouse as Null, overcome problem of Default Warehouse\n\tgrid_row.grid_form.fields_dict.rejected_warehouse.set_model_value(null);\n\n\n    // Add Button to Child Form ... Wrap it around the \"dialog_result\" field\n    var $btn = $('<button class=\"btn btn-sm btn-default\">' + __(\"Add Serial No\") + '</button>')\n        .appendTo($(\"<div>\")\n            .css({\n                \"margin-bottom\": \"10px\",\n                \"margin-top\": \"10px\"\n            })\n            .appendTo(grid_row.grid_form.fields_dict.serial_no.$wrapper));\n\n    // Bind a Event to Added Button\n    $btn.on(\"click\", function() {\n        var fields = [];\n        for (var rows = 1; rows <= grid_row.grid_form.fields_dict.received_qty.get_value(); rows++) {\n            fields.push({\n                label: \"Row No:\".concat(rows),\n                fieldname: \"row_no_\".concat(rows),\n                fieldtype: \"Section Break\"\n            });\n            for (var columns = 1; columns <= 4; columns++) {\n                if (columns == 1) {\n                    fields.push({\n                        label: \"Serial/Chassis No\",\n                        fieldname: \"chassis_no_\".concat(rows),\n                        fieldtype: \"Data\",\n                        reqd: 1\n                    });\n                }\n                if (grid_row.grid_form.fields_dict['is_vehicle'].value == 1) {\n                    if (columns == 2) {\n                        fields.push({\n                            label: \"Engine No\",\n                            fieldname: \"engine_no_\".concat(rows),\n                            fieldtype: \"Data\",\n                            reqd: 1\n                        });\n                    }\n                    if (columns == 3) {\n                        fields.push({\n                            label: \"Key No\",\n                            fieldname: \"key_no_\".concat(rows),\n                            fieldtype: \"Data\",\n                            reqd: 1\n                        });\n                    }\n                    if (columns == 4) {\n                        fields.push({\n                            label: \"Color\",\n                            fieldname: \"color_\".concat(rows),\n                            fieldtype: \"Data\",\n                            reqd: 1\n                        });\n                    }\n                    if (columns < 4) {\n                        fields.push({\n                            fieldname: \"column_no_\".concat(columns),\n                            fieldtype: \"Column Break\"\n                        });\n                    }\n                }\n            }\n        }\n        // Add \"Add\" Button to the Dialog\n        fields.push({\n            fieldtype: \"Section Break\"\n        });\n        //fields.push({fieldtype: \"Button\", \"label\": \"Set\", fieldname: \"add\"});\n\n\n        var d = new frappe.ui.Dialog({\n            title: __(\"Add Serial No\"),\n            fields\n        });\n\n        if (grid_row.grid_form.fields_dict.serial_no.get_value() != \"\") {\n            var existing_serial_no = grid_row.grid_form.fields_dict.serial_no.get_value().split(\"\\n\");\n            var existing_engine_no = grid_row.grid_form.fields_dict.engine_nos.get_value().split(\"\\n\");\n            var existing_key_no = grid_row.grid_form.fields_dict.key_nos.get_value().split(\"\\n\");\n            var existing_color = grid_row.grid_form.fields_dict.color.get_value().split(\"\\n\");\n            for (var row = 1; row <= existing_serial_no.length + 1; row++) {\n                d.set_value(\"chassis_no_\".concat(row), existing_serial_no[row - 1]);\n                d.set_value(\"engine_no_\".concat(row), existing_engine_no[row - 1]);\n                d.set_value(\"key_no_\".concat(row), existing_key_no[row - 1]);\n                d.set_value(\"color_\".concat(row), existing_color[row - 1]);\n            }\n        }\n        //Bind Event to Add Button in Dialog\n        d.set_primary_action(__(\"Save\"), function() {\n            /*****************/\n            args = d.get_values();\n            if (!args) return;\n            frappe.call({\n                method: \"mapl_customization.customizations_for_mapl.utils.validate_input_serial\",\n                args: {\n                    \"args\": d.get_values(),\n                    \"rows\": grid_row.grid_form.fields_dict.received_qty.get_value(),\n                    \"is_vehicle\": grid_row.grid_form.fields_dict['is_vehicle'].value\n                },\n\n                callback: function(r) {\n                    if (!r.message) {\n                        //return;\n                    }\n                }\n            });\n\n            /*****************/\n\n            //d.get_input(\"add\").on(\"click\", function() {\n            var result_serial_no = \"\";\n            var result_engine_no = \"\";\n            var result_key_no = \"\";\n            var result_color = \"\";\n            var color = \"\";\n            for (var rows = 1; rows <= grid_row.grid_form.fields_dict.received_qty.get_value(); rows++) {\n            \tvar carr_retu = \"\\n\"\n                if (rows == grid_row.grid_form.fields_dict.received_qty.get_value()) {\n                \tcarr_retu = \"\";\n                }\n                result_serial_no = result_serial_no.concat(d.get_value(\"chassis_no_\".concat(rows)), carr_retu);\n                result_engine_no = result_engine_no.concat(d.get_value(\"engine_no_\".concat(rows)), carr_retu);\n                result_key_no = result_key_no.concat(d.get_value(\"key_no_\".concat(rows)), carr_retu);\n                result_color = result_color.concat(d.get_value(\"color_\".concat(rows)), carr_retu);\n            }\n\n            d.hide();\n                //Set Resultant Value from Dialog in a Child Form Field - Here dialog_result\n                grid_row.grid_form.fields_dict.serial_no.set_value(result_serial_no);\n                //Set Resultant Value from Dialog in a Child Form Field - Here dialog_result\n                grid_row.grid_form.fields_dict.engine_nos.set_value(result_engine_no);\n                //Set Resultant Value from Dialog in a Child Form Field - Here dialog_result\n                grid_row.grid_form.fields_dict.key_nos.set_value(result_key_no);\n                grid_row.grid_form.fields_dict.color.set_value(result_color);\n\n\n            return false;\n        });\n\n        d.show();\n    });\n});\n/***************************************************************/\n/*              End Dialog On Child Form                       */\n/***************************************************************/\n\nfrappe.ui.form.on(\"Purchase Invoice\", \"items_on_form_rendered\", function(frm) {\n\tvar grid_row = cur_frm.open_grid_row();\n\tgrid_row.grid_form.fields_dict.warehouse.set_model_value(frm.doc.default_accepted_warehouse);\n});\n\nfrappe.ui.form.on(\"Purchase Invoice\", \"validate\", function(frm) {\n\tif (frm.doc.default_accepted_warehouse != null) {\n\t\tfrm.doc.items.forEach(function(i) {\n\t\t\tif (i.warehouse == null) {\n\t\t\t\ti.warehouse = frm.doc.default_accepted_warehouse;\n\t\t\t}\n\t\t});\n\t}\n\t/*frm.doc.items.forEach(function(i) {\n            if (i.gst_hsn_code == null || i.gst_hsn_code == \"\") {\n            \tfrappe.msgprint(\"HSN Code Not found for \"+i.item_code+\", Please verify\");\n            }\n\t});*/\n});\n\nfrappe.ui.form.on(\"Purchase Invoice\", \"refresh\", function(frm) {\n   if (!frm.doc.__islocal && !cur_frm.is_dirty() && frm.doc.docstatus==2) {\n\t\t\tfrm.page.add_menu_item(__('Make Document Editable'), function() { \n\t\t\t\tif (cur_frm.is_dirty()) {\n\t\t\t\t\tfrappe.msgprint(__(\"Please Save Changes Before Updating\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t            frappe.call({\n\t\t                method: \"mapl_customization.customizations_for_mapl.utils.make_document_editable\",\n\t\t                args: {\n\t\t                    \"doctype\": frm.doc.doctype,\n\t\t\t\t\t\t    \"doc_name\": frm.doc.name\n\t\t                },\n                \t\tcallback: function(r) {\n\t\t\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\t\t\tfrappe.msgprint(__(\"Success\"));\n                                frm.reload_doc();\n\t\t\t\t\t\t\t}\t\t       \n\t\t\t\t\t\t}\n\t            });\n\t\t\t});   \n   }\t\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Supplier", 
  "modified": "2016-07-28 20:40:39.882648", 
  "name": "Supplier-Client", 
  "script": "frappe.ui.form.on(\"Supplier\",\"refresh\", function(frm) {\n                   custom._get_party_balance_in_drcr('Supplier', frm.doc.name,\n\t\t\t\t\t\t\tfrappe.defaults.get_user_default(\"company\"), function(result) { \n\t\t\t\t\t\t\t\tfrm.doc.current_balance=result; \nrefresh_field(\"current_balance\");\n                             });\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Payment Entry", 
  "modified": "2017-08-04 19:31:01.695375", 
  "name": "Payment Entry-Client", 
  "script": "frappe.ui.form.on(\"Payment Entry\", \"before_cancel\", function(frm) {\n\tvar dialog = new frappe.ui.Dialog({\n\t\ttitle: \"Cancel Payment Entry\",\n\t\tfields: [\n\t\t\t{\"fieldtype\": \"Text\", \"label\": __(\"Reason for Cancelling\"), \"fieldname\": \"reason\",\n\t\t\t\t\"reqd\": 1 },\n\t\t\t{\"fieldtype\": \"Button\", \"label\": __(\"Update\"), \"fieldname\": \"update\"},\n\t\t]\n\t});\n\n\tdialog.fields_dict.update.$input.click(function() {\n\t\targs = dialog.get_values();\n\t\tif(!args) return;\n\t\treturn cur_frm.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.cancel_reason.update_reason\",\n\t\t\targs: {\n\t\t\t \"doc\":cur_frm.doc,\n\t\t\t \"reason\":args.reason\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tmsgprint(__(\"There were errors.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t\tcur_frm.reload_doc();\n\t\t\t},\n\t\t\tbtn: this\n\t\t})\n\t});\n\tdialog.show();\n});\n\nfrappe.ui.form.on(\"Payment Entry\", \"refresh\", function(frm) {\n\t$('.btn.btn-default.btn-xs:contains(\"Receipts\")').css('width','200px');\n    $('.btn.btn-default.btn-xs:contains(\"Payments\")').css('width','200px');\n    $('.btn.btn-default.btn-xs:contains(\"Receipts\")').css('height','50px');\n    $('.btn.btn-default.btn-xs:contains(\"Payments\")').css('height','50px');\n    $('.btn.btn-default.btn-xs:contains(\"Receipts\")').css('font-weight','800');\n    $('.btn.btn-default.btn-xs:contains(\"Payments\")').css('font-weight','800');\n    $('.btn.btn-default.btn-xs:contains(\"Payments\")').parent().css('text-align','center');\n    $('.btn.btn-default.btn-xs:contains(\"Receipts\")').parent().css('text-align','center');\n\n\t$('.input-with-feedback.form-control.bold[data-fieldname=\"paid_amount\"]').css({'background':'lightblue','border':'none'})\n   \n    if (!frm.doc.__islocal && !cur_frm.is_dirty() && frm.doc.docstatus==2) {\n\t\t\tfrm.page.add_menu_item(__('Make Document Editable'), function() { \n\t\t\t\tif (cur_frm.is_dirty()) {\n\t\t\t\t\tfrappe.msgprint(__(\"Please Save Changes Before Updating\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t            frappe.call({\n\t\t                method: \"mapl_customization.customizations_for_mapl.utils.make_document_editable\",\n\t\t                args: {\n\t\t                    \"doctype\": frm.doc.doctype,\n\t\t\t\t\t\t    \"doc_name\": frm.doc.name\n\t\t                },\n                \t\tcallback: function(r) {\n\t\t\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\t\t\tfrappe.msgprint(__(\"Success\"));\n                                frm.reload_doc();\n\t\t\t\t\t\t\t}\t\t       \n\t\t\t\t\t\t}\n\t            });\n\t\t\t});   \n   \t}\n\n\n});\nfrappe.ui.form.on(\"Payment Entry\", \"onload\", function(frm) {\n\n\tif (frm.doc.__islocal && !frm.doc.paid_amount) {\n    cur_frm.fields_dict.type_of_payment.wrapper.hide();\n\t}\n\n\tif ($.find('.btn.btn-sm.btn-default:contains(\"Add Party\")').length <= 0) {\n\n\tvar add_btn = $('<button class=\"btn btn-sm btn-default\">Add Party</button>').appendTo($(\"<div>\")\n            .css({\n                \"margin-bottom\": \"10px\",\n                \"margin-top\": \"10px\"\n            }).appendTo(cur_frm.fields_dict.party.$wrapper));\n            \n    add_btn.on(\"click\", function() {\n    \tif (frm.doc.party_type == \"Customer\") {\n        \tcustom.customer_quick_entry.set_called_from(\"party\");\n        \tcustom.customer_quick_entry(cur_frm);\n        }\n    });\n}\n\n   frm.set_query(\"party\", function(doc) {\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.select_customer_supplier_query\",\n        filters: {'party_type':doc.party_type }\n\t}\n   });\n   frm.set_query(\"party_address\", function(doc) {\n       if (doc.party_type==\"Customer\") {\n\t   \treturn{\n\t\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_address_query\",\n\t                filters: {'customer':doc.party}\n\t\t\t}\n       } else {\n\t   \treturn{\n\t\t\tquery: \"mapl_customization.customizations_for_mapl.queries.mapl_address_query\",\n\t                filters: {'supplier':doc.party}\n\t\t\t}\n       }\n   });\n\n});\n\nfrappe.ui.form.on(\"Payment Entry\", \"party\", function(frm) {\n\tif(frm.doc.party_type && frm.doc.party) {\n\t\tfrappe.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.utils.get_party_name\",\n\t\t\targs: {\n\t\t\t\tparty_type: frm.doc.party_type,\n\t\t\t\tparty: frm.doc.party\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc && r.message) {\n\t\t\t\t\tfrm.set_value(\"party_name\", r.message);\n\t\t\t\t}\n\t\t\t}\n\t\t});  \n\n          frm.call({\n            method: \"mapl_customization.customizations_for_mapl.utils.get_primary_billing_address\",\n            args: {\n\t\t\t\tparty_type: frm.doc.party_type,\n\t\t\t\tparty: frm.doc.party\n            },\n            callback: function(r) {\n                  if(r.message)\n                     frm.set_value(\"party_address\", r.message);\n                  else\n                     frm.set_value(\"party_address\", null);\n                } \n        });\n        custom._get_party_balance_formatted(frm.doc.party_type, frm.doc.party,\n\t\t\t\tfrm.doc.company, function(result) { \n\t\t\t\t\tshow_alert(result,8); \n                });   \t\t\n\t}\n});\n\nfrappe.ui.form.on(\"Payment Entry\", \"party_address\", function(frm) {\n   if (frm.doc.party_address) {\n          frm.call({\n            method: \"mapl_customization.customizations_for_mapl.utils.fetch_address_details_payments_receipts\",\n            args: {\n                party_address: frm.doc.party_address\n            },\n            callback: function(r) {\n                  if(r.message)\n                     frm.set_value(\"address\", r.message);\n                }\n        });   \n   } else\n        frm.set_value(\"address\", null);   \n});\ncur_frm.fields_dict['party_address'].get_query = function(doc, cdt, cdn) {\n      if (doc.party_type==\"Customer\") {\n\treturn{\n    \tfilters:{'customer': doc.party}\n  \t}\n      } else {\n\treturn{\n    \tfilters:{'supplier': doc.party}\n  \t}\n      }\n};\n\nfrappe.ui.form.on(\"Payment Entry\", \"payments\", function(frm) { \n\tfrm.set_value('payment_type','Pay');\n\tfrm.set_value('naming_series','MAPL/PAY/.YYYY./.######');\n    cur_frm.fields_dict.type_of_payment.wrapper.show();\n});\n\nfrappe.ui.form.on(\"Payment Entry\", \"receipts\", function(frm) { \n\tfrm.set_value('payment_type','Receive');\n\tif (frm.doc.__islocal) {\n\tfrappe.db.get_value(\"User\",frappe.boot.user.name,\"user_group\", function(r) \n\t\t{ \n\t\t\tif (r.user_group) { \n\t\t\t\tvar grp = r.user_group;\n\t\t\t\tif (grp == \"Geeta Bhawan\") {\n\t\t\t\t\tfrm.set_value('naming_series','MAPL/GB/REC/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Vijay Nagar\") {\n\t\t\t\t\tfrm.set_value('naming_series','MAPL/VN/REC/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Ranjeet Hanuman\") {\n\t\t\t\t\tfrm.set_value('naming_series','MAPL/RH/REC/.YYYY./.######');\n\t\t\t\t}\n\t\t\t} \n\t\t});\n\t}\n    cur_frm.fields_dict.type_of_payment.wrapper.show();\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Tally Stock Items", 
  "modified": "2017-02-27 16:18:35.663547", 
  "name": "Tally Stock Items-Client", 
  "script": "frappe.listview_settings['Tally Stock Items'] = {\n    onload: function(me){\n\t\tme.page.add_menu_item(__(\"Import to Main Database\"), function() {\n\t\t\tfrappe.set_route(\"tally-import\");\n\t\t});\n    }\n}", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Journal Entry", 
  "modified": "2017-07-27 16:56:56.732972", 
  "name": "Journal Entry-Client", 
  "script": "   cur_frm.set_query(\"party\",\"accounts\", function(doc, cdt, cdn) {\n\tvar jvd = frappe.get_doc(cdt, cdn);\n   \treturn{\n\t\tquery: \"mapl_customization.customizations_for_mapl.queries.select_customer_supplier_query\",\n        \tfilters: {'party_type':jvd.party_type }\n\t}\n   });\n\nfrappe.ui.form.on(\"Journal Entry\", \"refresh\", function(frm) {\n   if (!frm.doc.__islocal && !cur_frm.is_dirty() && frm.doc.docstatus==2) {\n\t\t\tfrm.page.add_menu_item(__('Make Document Editable'), function() { \n\t\t\t\tif (cur_frm.is_dirty()) {\n\t\t\t\t\tfrappe.msgprint(__(\"Please Save Changes Before Updating\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t            frappe.call({\n\t\t                method: \"mapl_customization.customizations_for_mapl.utils.make_document_editable\",\n\t\t                args: {\n\t\t                    \"doctype\": frm.doc.doctype,\n\t\t\t\t\t\t    \"doc_name\": frm.doc.name\n\t\t                },\n                \t\tcallback: function(r) {\n\t\t\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\t\t\tfrappe.msgprint(__(\"Success\"));\n                                frm.reload_doc();\n\t\t\t\t\t\t\t}\t\t       \n\t\t\t\t\t\t}\n\t            });\n\t\t\t});   \n   }\n});\nfrappe.ui.form.on(\"Journal Entry Account\", \"party\", function(frm, dt, dn) {\n\tvar grid_row = cur_frm.open_grid_row();\n\tvar pt = grid_row.grid_form.fields_dict.party_type.get_value();\n\tvar p = grid_row.grid_form.fields_dict.party.get_value();\n\n\tif(pt && p) {\n             if (pt==\"Customer\") {\n                   custom._get_party_balance_formatted('Customer', p,\n\t\t\t\t\t\t\tfrm.doc.company, function(result) { \n\t\t\t\t\t\t\t\tshow_alert(result,8); \n                             });\n             }\n\n\t\tfrappe.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.utils.get_party_name\",\n\t\t\targs: {\n\t\t\t\tparty_type: pt,\n\t\t\t\tparty: p\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc && r.message) {\n\t\t\t\t\tgrid_row.grid_form.fields_dict.party_name.set_value(r.message);\n\t\t\t\t}\n\t\t\t}\n\t\t});  \n\t}\n});\nfrappe.ui.form.on(\"Journal Entry\", \"before_cancel\", function(frm) {\n\tvar dialog = new frappe.ui.Dialog({\n\t\ttitle: \"Cancel Invoice\",\n\t\tfields: [\n\t\t\t{\"fieldtype\": \"Text\", \"label\": __(\"Reason for Cancelling\"), \"fieldname\": \"reason\",\n\t\t\t\t\"reqd\": 1 },\n\t\t\t{\"fieldtype\": \"Button\", \"label\": __(\"Update\"), \"fieldname\": \"update\"},\n\t\t]\n\t});\n\n\tdialog.fields_dict.update.$input.click(function() {\n\t\targs = dialog.get_values();\n\t\tif(!args) return;\n\t\treturn cur_frm.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.cancel_reason.update_reason\",\n\t\t\targs: {\n\t\t\t \"doc\":cur_frm.doc,\n\t\t\t \"reason\":args.reason\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tmsgprint(__(\"There were errors.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t\tcur_frm.reload_doc();\n\t\t\t},\n\t\t\tbtn: this\n\t\t})\n\t});\n\tdialog.show();\n});\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Stock Entry", 
  "modified": "2017-05-06 17:39:44.904846", 
  "name": "Stock Entry-Client", 
  "script": "frappe.ui.form.on(\"Stock Entry\", \"before_cancel\", function(frm) {\n\tvar dialog = new frappe.ui.Dialog({\n\t\ttitle: \"Cancel Stock Entry Voucher\",\n\t\tfields: [\n\t\t\t{\"fieldtype\": \"Text\", \"label\": __(\"Reason for Cancelling\"), \"fieldname\": \"reason\",\n\t\t\t\t\"reqd\": 1 },\n\t\t\t{\"fieldtype\": \"Button\", \"label\": __(\"Update\"), \"fieldname\": \"update\"},\n\t\t]\n\t});\n\n\tdialog.fields_dict.update.$input.click(function() {\n\t\targs = dialog.get_values();\n\t\tif(!args) return;\n\t\treturn cur_frm.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.cancel_reason.update_reason\",\n\t\t\targs: {\n\t\t\t \"doc\":cur_frm.doc,\n\t\t\t \"reason\":args.reason\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tmsgprint(__(\"There were errors.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t\tcur_frm.reload_doc();\n\t\t\t},\n\t\t\tbtn: this\n\t\t})\n\t});\n\tdialog.show();\n});\n\nfrappe.ui.form.on(\"Stock Entry\", \"onload\", function(frm) {\n\tfrappe.db.get_value(\"User\",frappe.boot.user.name,\"user_group\", function(r) \n\t\t{ \n\t\t\tif (r.user_group) { \n\t\t\t\tvar grp = r.user_group;\n\t\t\t\tif (grp == \"Geeta Bhawan\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/GB/STE/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Vijay Nagar\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/VN/STE/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Ranjeet Hanuman\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/RH/STE/.YYYY./.######');\n\t\t\t\t}\n\t\t\t} \n\t\t});\n});\n\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Address", 
  "modified": "2017-05-31 18:38:43.142097", 
  "name": "Address-Client", 
  "script": "frappe.ui.form.on(\"Address\",\"refresh\", function(frm) {\n\t\tif (!frm.doc.__islocal && !cur_frm.is_dirty()) {\n\t\t\tfrm.add_custom_button(__('Update Address'), function() {\n\t\t\tif (cur_frm.is_dirty()) {\n\t\t\t\tfrappe.msgprint(__(\"Please Save Changes Before Updating\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t            frappe.call({\n\t\t                method: \"mapl_customization.customizations_for_mapl.update_address.update_address\",\n\t\t                args: {\n\t\t                    \"address_name\": frm.doc.name,\n\t\t                },\n\n                \t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tfrappe.msgprint(__(\"Address Updated Across All Relevant Documents\"));\n\t\t\t\t\t}\t\t       \n\t\t\t\t}\n\t\t            });\n\t\t\t});\n\t\t} \n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Quotation", 
  "modified": "2017-08-04 19:32:36.439893", 
  "name": "Quotation-Client", 
  "script": "frappe.ui.form.on(\"Quotation\", \"onload\", function(frm) {\n\tif (frm.doc.__islocal) {\n\tfrappe.db.get_value(\"User\",frappe.boot.user.name,\"user_group\", function(r) \n\t\t{ \n\t\t\tif (r.user_group) { \n\t\t\t\tvar grp = r.user_group;\n\t\t\t\tif (grp == \"Geeta Bhawan\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/GB/QTN/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Vijay Nagar\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/VN/QTN/.YYYY./.######');\n\t\t\t\t} else if (grp == \"Ranjeet Hanuman\") {\n\t\t\t\t\tcur_frm.set_value('naming_series','MAPL/RH/QTN/.YYYY./.######');\n\t\t\t\t}\n\t\t\t} \n\t\t});\n\t}\t\n});\nfrappe.ui.form.on(\"Quotation\", \"refresh\", function(frm) {\n\tif (frm.doc.__islocal) {\n\t\tcur_frm.set_value('tc_name','Quotation Terms & Conditions');\n\t\tcur_frm.set_value('valid_till', frappe.datetime.add_days(frappe.datetime.nowdate(), 15));\n\t}\n});\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Finance Payment Tool", 
  "modified": "2017-08-03 19:50:03.173612", 
  "name": "Finance Payment Tool-Client", 
  "script": "frappe.ui.form.on(\"Finance Payment Tool\", \"refresh\", function(frm) {\n\tif (!frm.doc.__islocal && !cur_frm.is_dirty()) {\n\t\tfrm.add_custom_button(__('Fetch Customers'), function() { \n\t\t\tif (cur_frm.is_dirty()) {\n\t\t\t\tfrappe.msgprint(__(\"Please Save Changes Before Updating\"));\n\t\t\t\treturn;\n\t\t\t}\n\t            frappe.call({\n\t\t                method: \"mapl_customization.customizations_for_mapl.doctype.finance_payment_tool.finance_payment_tool.fetch_customers\",\n\t\t                args: {\n\t\t\t\t    \"doc_name\": frm.doc.name\n\t\t                },\n                \t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tfrappe.msgprint(__(\"Success\"));\n\t\t                                frm.reload_doc();\n\t\t\t\t\t}\t\t       \n\t\t\t\t}\n\t            });\n\t\t});\n\t\tfrm.add_custom_button(__('Make Journal Entries'), function() { \n\t\t\tif (cur_frm.is_dirty()) {\n\t\t\t\tfrappe.msgprint(__(\"Please Save Changes Before Updating\"));\n\t\t\t\treturn;\n\t\t\t}\n\t            frappe.call({\n\t\t                method: \"mapl_customization.customizations_for_mapl.doctype.finance_payment_tool.finance_payment_tool.make_jv\",\n\t\t                args: {\n\t\t\t\t    \"doc_name\": frm.doc.name\n\t\t                },\n                \t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tfrappe.msgprint(__(\"Success\"));\n\t\t                                frm.reload_doc();\n\t\t\t\t\t}\t\t       \n\t\t\t\t}\n\t            });\n\t\t});\n\t}\n});\nfrappe.ui.form.on(\"Finance Payment Details\", \"internal_customer\", function(frm, dt, dn) {\n\tvar grid_row = cur_frm.open_grid_row();\n\tvar p = grid_row.grid_form.fields_dict.internal_customer.get_value();\n\n\tif(p) {\n\t\tfrappe.call({\n\t\t\tmethod: \"mapl_customization.customizations_for_mapl.utils.get_party_name\",\n\t\t\targs: {\n\t\t\t\tparty_type: 'Customer',\n\t\t\t\tparty: p\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc && r.message) {\n\t\t\t\t\tgrid_row.grid_form.fields_dict.internal_customer_name.set_value(r.message);\n\t\t\t\t}\n\t\t\t}\n\t\t});  \n\t}\n});", 
  "script_type": "Client"
 }
]